name: Build and Deploy

on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Setup wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Pack games
        run: |
          cd rust/pack-games/sgfs
          ./extract.sh
          cd ../python-player-name-aliases
          gzip -d *.gz
          cd ../
          cargo run --release
          cp games.pack ../wasm-search/src/

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend
        run: cd frontend && yarn build

      - name: Copy netlify.toml
        run: cp frontend/netlify.toml frontend/dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

      - name: Move netlify.toml
        run: mv frontend/dist/netlify.toml .

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ vars.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=frontend/dist --prod
