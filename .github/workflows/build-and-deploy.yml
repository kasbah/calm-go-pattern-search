name: Build and Deploy

on:
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-rust:
    runs-on: ubuntu-latest
    outputs:
      rust-hash: ${{ steps.get-hash.outputs.hash }}
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          fetch-depth: 0

      - name: Get rust folder git hash
        id: get-hash
        run: |
          HASH=$(git rev-list -1 HEAD -- rust/)
          echo "hash=$HASH" >> $GITHUB_OUTPUT
          echo "Rust folder hash: $HASH"

      - name: Check cache for rust artifacts
        id: cache-rust-artifacts
        uses: actions/cache@v4
        with:
          path: rust/wasm-search/pkg
          key: rust-artifacts-${{ steps.get-hash.outputs.hash }}

      - name: Setup Rust
        if: steps.cache-rust-artifacts.outputs.cache-hit != 'true'
        uses: dtolnay/rust-toolchain@stable

      - name: Setup wasm-pack
        if: steps.cache-rust-artifacts.outputs.cache-hit != 'true'
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Pack games
        if: steps.cache-rust-artifacts.outputs.cache-hit != 'true'
        run: |
          cd frontend/public/sgfs
          ./extract.sh
          cd ../../../rust/pack-games/python-player-name-aliases
          gzip -d *.gz
          cd ../
          cargo run --release

      - name: Build wasm-search
        if: steps.cache-rust-artifacts.outputs.cache-hit != 'true'
        run: wasm-pack build rust/wasm-search --target web

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-rust
    steps:
      - name: Checkout
        uses: nschloe/action-cached-lfs-checkout@v1
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: ${{ steps.detect-package-manager.outputs.manager }}

      - name: Get rust artifacts from cache
        uses: actions/cache@v4
        with:
          path: rust/wasm-search/pkg
          key: rust-artifacts-${{ needs.build-rust.outputs.rust-hash }}
          fail-on-cache-miss: true

      - name: Unpack sgfs
        run: |
          cd frontend/public/sgfs
          ./extract.sh

      - name: Unpack player_names.json
        run: cd rust/pack-games/python-player-name-aliases/ && gunzip player_names.json.gz

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build frontend
        run: cd frontend && yarn build

      - name: Move netlify.toml
        run: mv frontend/netlify.toml .

      - name: Deploy to Netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ vars.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=frontend/dist --prod
